class InkyStatusBar : BaseStatusBar
{
    HUDFont mHUDFont;
	HUDFont mIndexFont;
	HUDFont mAmountFont;
	InventoryBarState diparms;
	
	override void Tick(void)
	{
		super.tick();
		
	}


	override void Init()
	{
		Super.Init();
		SetSize(32, 320, 200);

		// Create the font used for the fullscreen HUD
		Font fnt = "HUDFONT_DOOM";
		mHUDFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft, 1, 1);
		fnt = "INDEXFONT_DOOM";
		mIndexFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft);
		mAmountFont = HUDFont.Create("INDEXFONT");
		diparms = InventoryBarState.Create();
	}

	override void Draw (int state, double TicFrac)
	{
		Super.Draw (state, TicFrac);

		if (state == HUD_StatusBar)
		{
			BeginStatusBar();
			InkyDrawMainBar (TicFrac);
		}
		else if (state == HUD_Fullscreen)
		{
			BeginHUD();
			InkyDrawFullScreenStuff ();
		}
	}

	protected void InkyDrawMainBar (double TicFrac)
	{
		DrawImage("STBAR", (0, 168), DI_ITEM_OFFSETS);
		DrawImage("STTPRCNT", (90, 171), DI_ITEM_OFFSETS);
		DrawImage("STTPRCNT", (221, 171), DI_ITEM_OFFSETS);
		
		Inventory a1 = GetCurrentAmmo();
		if (a1 != null) DrawString(mHUDFont, FormatNumber(a1.Amount, 3), (44, 171), DI_TEXT_ALIGN_RIGHT|DI_NOSHADOW);
		DrawString(mHUDFont, FormatNumber(CPlayer.health, 3), (90, 171), DI_TEXT_ALIGN_RIGHT|DI_NOSHADOW);
		DrawString(mHUDFont, FormatNumber(GetArmorAmount(), 3), (221, 171), DI_TEXT_ALIGN_RIGHT|DI_NOSHADOW);

		InkyDrawBarKeys();
		InkyDrawBarAmmo();
		
		if (deathmatch || teamplay)
		{
			DrawString(mHUDFont, FormatNumber(CPlayer.FragCount, 3), (138, 171), DI_TEXT_ALIGN_RIGHT);
		}
		else
		{
			InkyDrawBarWeapons();
		}
		
		if (multiplayer)
		{
			DrawImage("STFBANY", (143, 168), DI_ITEM_OFFSETS|DI_TRANSLATABLE);
		}
		
		if (CPlayer.mo.InvSel != null && !Level.NoInventoryBar)
		{
			DrawInventoryIcon(CPlayer.mo.InvSel, (160, 198), DI_DIMDEPLETED);
			if (CPlayer.mo.InvSel.Amount > 1)
			{
				DrawString(mAmountFont, FormatNumber(CPlayer.mo.InvSel.Amount), (175, 198-mIndexFont.mFont.GetHeight()), DI_TEXT_ALIGN_RIGHT, Font.CR_GOLD);
			}
		}
		else
		{
			DrawTexture(GetMugShot(5), (143, 168), DI_ITEM_OFFSETS);
		}
		if (isInventoryBarVisible())
		{
			DrawInventoryBar(diparms, (48, 169), 7, DI_ITEM_LEFT_TOP);
		}
		
	}
	
	protected virtual void InkyDrawBarKeys()
	{
		bool locks[6];
		String image;
		for(int i = 0; i < 6; i++) locks[i] = CPlayer.mo.CheckKeys(i + 1, false, true);
		// key 1
		if (locks[1] && locks[4]) image = "STKEYS6";
		else if (locks[1]) image = "STKEYS0";
		else if (locks[4]) image = "STKEYS3";
		DrawImage(image, (239, 171), DI_ITEM_OFFSETS);
		// key 2
		if (locks[2] && locks[5]) image = "STKEYS7";
		else if (locks[2]) image = "STKEYS1";
		else if (locks[5]) image = "STKEYS4";
		else image = "";
		DrawImage(image, (239, 181), DI_ITEM_OFFSETS);
		// key 3
		if (locks[0] && locks[3]) image = "STKEYS8";
		else if (locks[0]) image = "STKEYS2";
		else if (locks[3]) image = "STKEYS5";
		else image = "";
		DrawImage(image, (239, 191), DI_ITEM_OFFSETS);
	}
	
	protected virtual void InkyDrawBarAmmo()
	{
		int amt1, maxamt;
		[amt1, maxamt] = GetAmount("Clip");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (288, 173), DI_TEXT_ALIGN_RIGHT);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (314, 173), DI_TEXT_ALIGN_RIGHT);
		
		[amt1, maxamt] = GetAmount("Shell");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (288, 179), DI_TEXT_ALIGN_RIGHT);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (314, 179), DI_TEXT_ALIGN_RIGHT);
		
		[amt1, maxamt] = GetAmount("RocketAmmo");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (288, 185), DI_TEXT_ALIGN_RIGHT);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (314, 185), DI_TEXT_ALIGN_RIGHT);
		
		[amt1, maxamt] = GetAmount("Cell");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (288, 191), DI_TEXT_ALIGN_RIGHT);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (314, 191), DI_TEXT_ALIGN_RIGHT);
	}
	
	protected virtual void InkyDrawBarWeapons()
	{
		DrawImage("STARMS", (104, 168), DI_ITEM_OFFSETS);
		DrawImage(CPlayer.HasWeaponsInSlot(2)? "STYSNUM2" : "STGNUM2", (111, 172), DI_ITEM_OFFSETS);
		DrawImage(CPlayer.HasWeaponsInSlot(3)? "STYSNUM3" : "STGNUM3", (123, 172), DI_ITEM_OFFSETS);
		DrawImage(CPlayer.HasWeaponsInSlot(4)? "STYSNUM4" : "STGNUM4", (135, 172), DI_ITEM_OFFSETS);
		DrawImage(CPlayer.HasWeaponsInSlot(5)? "STYSNUM5" : "STGNUM5", (111, 182), DI_ITEM_OFFSETS);
		DrawImage(CPlayer.HasWeaponsInSlot(6)? "STYSNUM6" : "STGNUM6", (123, 182), DI_ITEM_OFFSETS);
		DrawImage(CPlayer.HasWeaponsInSlot(7)? "STYSNUM7" : "STGNUM7", (135, 182), DI_ITEM_OFFSETS);
	}



	protected void InkyDrawFullScreenStuff ()
	{
		Vector2 iconbox = (40, 20);
		int fontcolorhp;
		int fontcolorarmor;
		let armor = BasicArmor(cplayer.mo.FindInventory("BasicArmor"));


		//HP COLOR
		if (CPlayer.Health > 100)
		{
			fontcolorhp = font.cr_lightblue;
		}

		else if (CPlayer.Health > 25)
		{
			fontcolorhp = font.cr_green;
		}

		else
		{
			fontcolorhp = -1;
		}
		////

		//ARMOR COLOR
		if (armor.Amount > 100)
		{
			fontcolorarmor = font.cr_lightblue;
		}

		else if (armor.Amount > 0)
		{
			fontcolorarmor = font.cr_green;
		}

		else
		{
			fontcolorarmor = -1;
		}
		////

		DrawImage("STHPAM", (70, 0), DI_SCREEN_LEFT_BOTTOM); //Left side bar
		DrawImage("STTPRCNT", (97, -13), DI_SCREEN_LEFT_BOTTOM); //Health Percent
		DrawTexture(GetMugShot(5), (122, 0), DI_SCREEN_LEFT_BOTTOM); //Doomguys Beautiful face
		DrawString(mHUDFont, FormatNumber(CPlayer.health, 3), (47, -28), DI_TEXT_ALIGN_LEFT|DI_NOSHADOW | DI_SCREEN_LEFT_BOTTOM, fontcolorhp); //OverHeal Number


		DrawImage("Graphics/STARMKEYS.png", (-70, 0), DI_SCREEN_RIGHT_BOTTOM); //Right side bar
		DrawImage("STTPRCNT", (-91, -13), DI_SCREEN_RIGHT_BOTTOM); //Armor Percent
		DrawString(mHUDFont, FormatNumber(GetArmorAmount(), 3), (-98, -28), DI_TEXT_ALIGN_RIGHT|DI_NOSHADOW|DI_SCREEN_RIGHT_BOTTOM, fontcolorarmor); //Armor Number

		InkyDrawFullScreenPowerUps(); //Powerup Icons
		InkyDrawFullScreenBarWeapons(); //weapon numbers
		InkyDrawFullScreenBarAmmo(); //ammo on all guns
		InkyDrawFullScreenLevelStats(); //level stats

		Inventory ammotype1, ammotype2;
		[ammotype1, ammotype2] = GetCurrentAmmo();
		int invY = -20;
		if (ammotype1 != null)
		{
			DrawString(mHUDFont, FormatNumber(ammotype1.Amount, 3), (0, -28), DI_TEXT_ALIGN_LEFT | DI_SCREEN_LEFT_BOTTOM);
			invY -= 20;
		}

		if (!isInventoryBarVisible() && !Level.NoInventoryBar && CPlayer.mo.InvSel != null)
		{
			DrawInventoryIcon(CPlayer.mo.InvSel, (-14, invY + 17), DI_DIMDEPLETED);
			DrawString(mHUDFont, FormatNumber(CPlayer.mo.InvSel.Amount, 3), (-30, invY), DI_TEXT_ALIGN_RIGHT);
		}

		if (deathmatch)
		{
			DrawString(mHUDFont, FormatNumber(CPlayer.FragCount, 3), (-3, 1), DI_TEXT_ALIGN_RIGHT, Font.CR_GOLD);
		}
		else
		{
			InkyDrawFullscreenKeys();
		}
		
		if (isInventoryBarVisible())
		{
			DrawInventoryBar(diparms, (0, 0), 7, DI_SCREEN_CENTER_BOTTOM, HX_SHADOW);
		}
	}
	
	protected virtual void InkyDrawFullscreenKeys()
	{
		// Draw the keys. This does not use a special draw function like SBARINFO because the specifics will be different for each mod
		// so it's easier to copy or reimplement the following piece of code instead of trying to write a complicated all-encompassing solution.
		let blues = Cplayer.mo.FindInventory("BlueSkull");
		let reds = Cplayer.mo.FindInventory("RedSkull");
		let yellows = Cplayer.mo.FindInventory("YellowSkull");

		let bluec = Cplayer.mo.FindInventory("BlueCard");
		let redc = Cplayer.mo.FindInventory("RedCard");
		let yellowc = Cplayer.mo.FindInventory("YellowCard");

		if (blues) {DrawInventoryIcon(blues, (-63, -54), DI_SCREEN_RIGHT_BOTTOM);}
		if (yellows) {DrawInventoryIcon(yellows, (-63, -44), DI_SCREEN_RIGHT_BOTTOM);}
		if (reds) {DrawInventoryIcon(reds, (-63, -34), DI_SCREEN_RIGHT_BOTTOM);}

		if (bluec) {DrawInventoryIcon(bluec, (-77, -23), DI_SCREEN_RIGHT_BOTTOM);}
		if (yellowc) {DrawInventoryIcon(yellowc, (-77, -13), DI_SCREEN_RIGHT_BOTTOM);}
		if (redc) {DrawInventoryIcon(redc, (-77, -3), DI_SCREEN_RIGHT_BOTTOM);}
	}

	protected virtual void InkyDrawFullScreenPowerUps()
    {
		let bers = CPlayer.mo.FindInventory("PowerStrength");
		if (bers)
			DrawImage("Graphics/Icons/BerserkIcon.png", (135, -1));
    }

	protected virtual void InkyDrawFullScreenBarWeapons()
	{
		DrawImage(CPlayer.HasWeaponsInSlot(2)? "STYSNUM2" : "STGNUM2", (81, -33), DI_SCREEN_LEFT_BOTTOM);
		DrawImage(CPlayer.HasWeaponsInSlot(3)? "STYSNUM3" : "STGNUM3", (91, -33), DI_SCREEN_LEFT_BOTTOM);
		DrawImage(CPlayer.HasWeaponsInSlot(4)? "STYSNUM4" : "STGNUM4", (101, -33),DI_SCREEN_LEFT_BOTTOM);
		DrawImage(CPlayer.HasWeaponsInSlot(5)? "STYSNUM5" : "STGNUM5", (111, -33),DI_SCREEN_LEFT_BOTTOM);
		DrawImage(CPlayer.HasWeaponsInSlot(6)? "STYSNUM6" : "STGNUM6", (121, -33),DI_SCREEN_LEFT_BOTTOM);
		DrawImage(CPlayer.HasWeaponsInSlot(7)? "STYSNUM7" : "STGNUM7", (131, -33),DI_SCREEN_LEFT_BOTTOM);
	}

	protected virtual void InkyDrawFullScreenBarAmmo()
	{
		int amt1, maxamt;
		[amt1, maxamt] = GetAmount("Clip"); //ITS A MAGAZINE!!!
		DrawString(mIndexFont, FormatNumber(amt1, 3), (-31, -27), DI_TEXT_ALIGN_RIGHT | DI_SCREEN_RIGHT_BOTTOM); //+27 x
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (-4, -27), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);//+6 y
		
		[amt1, maxamt] = GetAmount("Shell");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (-31, -21), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (-4, -21), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);
		
		[amt1, maxamt] = GetAmount("RocketAmmo");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (-31, -15), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (-4, -15), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);
		
		[amt1, maxamt] = GetAmount("Cell");
		DrawString(mIndexFont, FormatNumber(amt1, 3), (-31, -9), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);
		DrawString(mIndexFont, FormatNumber(maxamt, 3), (-4, -9), DI_TEXT_ALIGN_RIGHT| DI_SCREEN_RIGHT_BOTTOM);
	}

	protected virtual void InkyDrawFullScreenLevelStats()
	{
		//Kills
		int pcnt = Level.total_monsters ? 100 * Level.killed_monsters / Level.total_monsters : 100;
		int amt = multiplayer ? CPlayer.killcount : pcnt;
		int kils = CPlayer.killcount;
		DrawString(mIndexFont, FormatNumber(kils, 3), (24,-60), DI_TEXT_ALIGN_RIGHT | DI_SCREEN_LEFT_BOTTOM);
		DrawString(mIndexFont, FormatNumber(amt, 3), (37,-60), DI_TEXT_ALIGN_RIGHT | DI_SCREEN_LEFT_BOTTOM);
		DrawImage("Graphics/Icons/KillsIcon.png", (7,-52), DI_SCREEN_LEFT_BOTTOM, scale: (0.8, 0.8));
		DrawImage("Graphics/STYSPRCNT.png", (40,-55), DI_SCREEN_LEFT_BOTTOM);
	}
	
}
